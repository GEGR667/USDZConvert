name: USDZ Conversion (Pixar USD build)

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  convert:
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Show workspace + confirm house.usd
        run: |
          echo "PWD: $(pwd)"
          echo "Workspace: $GITHUB_WORKSPACE"
          ls -la
          test -f "$GITHUB_WORKSPACE/house.usd" && echo "Found house.usd" || (echo "house.usd NOT found"; exit 1)

      - name: Cache USD build
        id: cache-usd
        uses: actions/cache@v4
        with:
          path: |
            ${{ runner.temp }}/USD-Install
            ${{ runner.temp }}/USD-Build
          key: usd-${{ runner.os }}-v23.11

      - name: Install prerequisites (only if cache miss)
        if: steps.cache-usd.outputs.cache-hit != 'true'
        run: |
          brew update
          brew install cmake ninja python@3.10
          # create isolated python venv to avoid PEP 668 errors
          python3.10 -m venv "${RUNNER_TEMP}/usd-venv"
          source "${RUNNER_TEMP}/usd-venv/bin/activate"
          python -m pip install --upgrade pip
          python -V
          which python

      - name: Build Pixar USD (only if cache miss)
        if: steps.cache-usd.outputs.cache-hit != 'true'
        run: |
          set -e
          source "${RUNNER_TEMP}/usd-venv/bin/activate"
          cd "${RUNNER_TEMP}"
          git clone --depth 1 --branch v23.11 https://github.com/PixarAnimationStudios/USD.git
          # Minimal build: no tests/docs/examples/tutorials; Ninja for speed
          python USD/build_scripts/build_usd.py USD-Install \
            --build USD-Build \
            --no-tests --no-examples --no-tutorials --no-docs \
            --generator Ninja | tee "${RUNNER_TEMP}/usd_build.log"

      - name: Upload build log (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: usd_build_log
          path: ${{ runner.temp }}/usd_build.log
          if-no-files-found: ignore

      - name: Set USD env + list tools
        run: |
          export USD_INSTALL="${RUNNER_TEMP}/USD-Install"
          echo "USD_INSTALL=$USD_INSTALL" >> $GITHUB_ENV
          echo "$USD_INSTALL/bin" >> $GITHUB_PATH
          echo "USD bin:"
          ls -la "$USD_INSTALL/bin"

      - name: Sanity check usdzconvert
        run: |
          usdzconvert --help || (echo "usdzconvert not runnable"; exit 1)

      - name: Convert house.usd -> house.usdz (absolute paths)
        run: |
          SRC="$GITHUB_WORKSPACE/house.usd"
          DST="$GITHUB_WORKSPACE/house.usdz"
          echo "Converting: $SRC -> $DST"
          usdzconvert "$SRC" "$DST"
          ls -lh "$DST"

      - name: Upload USDZ artifact
        uses: actions/upload-artifact@v4
        with:
          name: house_usdz
          path: house.usdz
