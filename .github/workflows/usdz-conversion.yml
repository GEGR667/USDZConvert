name: USDZ Conversion (macOS, OpenUSD-style)

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build-and-convert:
    runs-on: macos-15
    env:
      PYTHON_VERSION: "3.11"   # aligns with OpenUSD macOS CI
    timeout-minutes: 60

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Verify input USD exists
        run: |
          echo "Workspace: $GITHUB_WORKSPACE"
          ls -la
          test -f "$GITHUB_WORKSPACE/house.usd" || (echo "house.usd not found at repo root"; exit 1)

      # Cache the installed toolchain folder (matches OpenUSD CI pattern)
      - name: Restore cached OpenUSD (USDinst)
        id: cache-usd
        uses: actions/cache/restore@v4
        with:
          path: USDinst
          key: ${{ runner.os }}-OpenUSD-${{ env.PYTHON_VERSION }}-${{ hashFiles('build_scripts/**/*') }}

      - name: Setup Python (only if building)
        if: steps.cache-usd.outputs.cache-hit != 'true'
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install deps (only if building)
        if: steps.cache-usd.outputs.cache-hit != 'true'
        run: |
          # Match OpenUSD CI: use Appleâ€™s CMake app & Xcode toolchain
          export PATH=/Applications/CMake.app/Contents/bin:$PATH
          sudo xcode-select -s /Applications/Xcode_16.app/Contents/Developer
          # Workaround macOS versioning during pip installs (OpenUSD CI does this)
          export SYSTEM_VERSION_COMPAT=1
          python -m pip install --upgrade pip setuptools
          # No PySide/GL needed for usdzconvert
          export -n SYSTEM_VERSION_COMPAT

      - name: Build OpenUSD (only if cache miss)
        if: steps.cache-usd.outputs.cache-hit != 'true'
        run: |
          set -e
          export PATH=/Applications/CMake.app/Contents/bin:$PATH
          # Build into USDinst/ inside the workspace (so the cache step can save it)
          python build_scripts/build_usd.py \
            --no-materialx \
            --generator Xcode \
            --build USDgen/build \
            --src USDgen/src \
            USDinst \
            --build-args USD,"-DPXR_HEADLESS_TEST_MODE=ON -DPXR_BUILD_TESTS=OFF" -v | tee usd_build.log
          test -x USDinst/bin/usdzconvert || (echo "usdzconvert missing"; exit 1)

      - name: Save OpenUSD toolchain to cache
        if: steps.cache-usd.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: USDinst
          key: ${{ steps.cache-usd.outputs.cache-primary-key }}

      - name: Upload build log (always try)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: usd_build_log
          path: usd_build.log
          if-no-files-found: ignore

      - name: Sanity check tool
        run: |
          ls -la USDinst/bin
          USDinst/bin/usdzconvert --help >/dev/null

      - name: Convert USD -> USDZ
        run: |
          SRC="$GITHUB_WORKSPACE/house.usd"
          DST="$GITHUB_WORKSPACE/house.usdz"
          echo "Converting: $SRC -> $DST"
          USDinst/bin/usdzconvert "$SRC" "$DST"
          ls -lh "$DST"

      - name: Upload USDZ artifact
        uses: actions/upload-artifact@v4
        with:
          name: house_usdz
          path: house.usdz
